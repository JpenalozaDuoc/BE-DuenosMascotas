spring.application.name=microvetcare

#Permite crear o actualizar la tabla
spring.jpa.hibernate.ddl-auto=none
#none
#update

#spring.jpa.open-in-view=false
#Oracle Setting Cloud
spring.datasource.url=jdbc:oracle:thin:@iqkd6ds0zyf8ohax_high?TNS_ADMIN=/wallet
spring.datasource.username=DOGVET
spring.datasource.password=Oracle12345.

#Configuraciones generales de SQL
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.OracleDialect
spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
spring.sql.init.platform=oracle
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# En caso que se encuentre ocupado el Puert por defecto 8080, se debe descomentar la linea siguiente:
server.port=8094
spring.jpa.open-in-view=true
#Permite optimizar las consultas, para no sobre cargar la memoria de la maquina
spring.datasource.hikari.maximum-pool-size= 10
spring.datasource.hikari.connection-timeout= 30000


#logging.level.root=INFO
#logging.level.org.hibernate=DEBUG
#logging.level.org.springframework=INFO

# Configuración de Keycloak
# URL del servidor de Keycloak
keycloak.auth-server-url=https://vetcare360.duckdns.org/realms/vetcare360
keycloak.realm=vetcare360
# El nombre de tu cliente (configurado en Keycloak)
keycloak.resource=vetcare-app-service 
keycloak.credentials.secret=mdPFoNqBDe97jq4o1ZoCFsOFDWdf5JjD
# Solo se utiliza para verificar tokens (no maneja login directamente)
keycloak.bearer-only=true  

# Configuración de CORS
spring.web.cors.allow-credentials=true
spring.web.cors.allowed-origins=http://localhost:4200
spring.web.cors.allowed-methods=GET, POST, PUT, DELETE, PATCH
spring.web.cors.allowed-headers=*